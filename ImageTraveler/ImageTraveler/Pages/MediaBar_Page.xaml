<Page x:Name="page"
    x:Class="ImageTraveler.Pages.MediaBar_Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ImageTraveler="clr-namespace:ImageTraveler"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:ImageTraveler.Pages"      
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pgb="clr-namespace:ImageTraveler.Style_Resources"
    xmlns:vm="clr-namespace:ImageTraveler.ViewModels"
    Title="MediaBar_Page"
    d:DesignHeight="120"
    d:DesignWidth="1000"
    KeyboardNavigation.TabNavigation="None"
    Loaded="Page_Loaded"
    mc:Ignorable="d" >

    <Page.DataContext>
        <vm:Main_Command/>
    </Page.DataContext>

    <Page.Resources>
        <vm:Main_VM x:Key="main_vm" />
        <vm:Main_Command x:Key="main_cmd" />
        <Storyboard x:Key="Btn_group_StoryBoard1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Btn_group" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackBorer" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.35" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider_mediabar" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Btn_group_StoryBoard2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackBorer" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider_mediabar" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Btn_group" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Bar_Volumn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider_volume" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider_volume" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="{Binding ActualWidth, ElementName=rectangle_outer}" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="volume_txt" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Bar_Volumn_mouse_leave">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider_volume" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Slider_volume" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="volume_txt" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>

    <Page.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="grid">
            <BeginStoryboard x:Name="Btn_group_StoryBoard1_BeginStoryboard" Storyboard="{StaticResource Btn_group_StoryBoard1}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="grid1">
            <BeginStoryboard x:Name="Btn_group_StoryBoard2_BeginStoryboard" Storyboard="{StaticResource Btn_group_StoryBoard2}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="Btn_group_StoryBoard2_BeginStoryboard1" Storyboard="{StaticResource Btn_group_StoryBoard2}" />
            <BeginStoryboard x:Name="Bar_Volumn_mouse_leave_BeginStoryboard" Storyboard="{StaticResource Bar_Volumn_mouse_leave}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="rectangle_outer">
            <StopStoryboard BeginStoryboardName="Bar_Volumn_BeginStoryboard" />
            <StopStoryboard BeginStoryboardName="Bar_Volumn_BeginStoryboard" />
            <ResumeStoryboard BeginStoryboardName="Bar_Volumn_BeginStoryboard" />
            <BeginStoryboard x:Name="Bar_Volumn_BeginStoryboard" Storyboard="{StaticResource Bar_Volumn}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="rectangle_outer">
            <BeginStoryboard x:Name="Bar_Volumn_mouse_leave_BeginStoryboard1" Storyboard="{StaticResource Bar_Volumn_mouse_leave}" />
        </EventTrigger>
    </Page.Triggers>



    <Grid
        x:Name="grid"
        FocusVisualStyle="{x:Null}"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch">
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="../Style_Resources/MainStyle.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>
        <!--  Btn_Group  -->
        <Grid
            x:Name="grid1"
            Background="Transparent"
            FocusVisualStyle="{x:Null}">
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:InvokeCommandAction Command="{Binding MouseMoveCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            <Grid.RowDefinitions>
                <RowDefinition Height="0.6*" />
                <RowDefinition Height="0.2*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="0.2*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="0.8*" />
            </Grid.RowDefinitions>

            <Border
                x:Name="BackBorer"
                Grid.Row="0"
                Grid.RowSpan="6"
                Background="Black"
                FocusVisualStyle="{x:Null}"
                MouseMove="BackBorer_MouseMove">
                <Border.OpacityMask>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0.339" Color="Black" />
                        <GradientStop Color="Transparent" />
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>

            <Border
                x:Name="grid_slider"
                Grid.Row="2"
                MouseMove="BackBorer_MouseMove"
                SizeChanged="grid_slider_SizeChanged">
                <Slider
                    x:Name="Slider_mediabar"
                    Grid.Row="2"
                    HorizontalAlignment="Stretch"
                    Panel.ZIndex="3"
                    Focusable="False"
                    Maximum="500"
                    Mouse.PreviewMouseDown="Slider_mediabar_PreviewMouseDown"
                    Opacity="{Binding GroupOpacity[0]}"
                    Style="{DynamicResource Horizontal_Slider}"
                    Thumb.DragCompleted="mediaTimeBar_DragCompleted"
                    Thumb.DragStarted="mediaTimeBar_DragStarted"
                    Visibility="{Binding sliderVisible}"
                    Value="{Binding mediaTimePosition}">
                    <Slider.Resources>
                        <Style x:Key="Horizontal_Slider" TargetType="{x:Type Slider}">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Style.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter Property="MinHeight" Value="5" />
                                    <Setter Property="MinWidth" Value="104" />
                                    <Setter Property="Template" Value="{DynamicResource Slider}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <ControlTemplate x:Key="Slider" TargetType="{x:Type Slider}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track" Grid.Row="2">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{DynamicResource SliderRepeatButton1}" />
                                        <!--<RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButton1}" />-->
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource SliderThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{DynamicResource SliderRepeatButton}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                        <!--  SliderThumb  -->
                        <Style x:Key="SliderThumb" TargetType="{x:Type Thumb}">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Ellipse
                                            Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                            Height="{Binding sliderThumb_size}"
                                            Fill="Transparent"
                                            Stroke="Orange"
                                            StrokeThickness="2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <!--  Future Bar  -->
                        <Style x:Key="SliderRepeatButton" TargetType="{x:Type RepeatButton}">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Focusable" Value="false" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Border
                                                Grid.Row="0"
                                                Grid.RowSpan="3"
                                                Background="Transparent" />
                                            <Border
                                                Grid.Row="1"
                                                Height="3"
                                                Background="DarkGray" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="SliderRepeatButton1" TargetType="{x:Type RepeatButton}">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="OverridesDefaultStyle" Value="true" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter Property="Focusable" Value="false" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Border
                                                Grid.Row="0"
                                                Grid.RowSpan="3"
                                                Background="Transparent" />
                                            <Border
                                                Grid.Row="1"
                                                Height="3"
                                                Background="Orange"
                                                SnapsToDevicePixels="True" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Slider.Resources>
                </Slider>
            </Border>
            <!--  Opacity="{Binding GroupOpacity[2]}"  -->
            <Border
                x:Name="Btn_group"
                Grid.Row="4"
                Panel.ZIndex="3"
                Background="Transparent"
                MouseMove="BackBorer_MouseMove">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="{Binding btn_gridLength}" />
                        <ColumnDefinition Width="{Binding btnGap_gridLength}" />
                        <ColumnDefinition Width="{Binding btn_gridLength}" />
                        <ColumnDefinition Width="{Binding btnGap_gridLength}" />
                        <ColumnDefinition Width="{Binding btn_gridLength}" />
                        <ColumnDefinition Width="{Binding btnGap_gridLength}" />
                        <ColumnDefinition Width="{Binding btn_gridLength}" />
                        <ColumnDefinition Width="{Binding btnGap_gridLength}" />
                        <ColumnDefinition Width="{Binding btn_gridLength}" />
                        <ColumnDefinition Width="{Binding btnGap_gridLength}" />
                        <ColumnDefinition Width="2.6*" />
                        <ColumnDefinition Width="2.8*" />
                        <ColumnDefinition Width="{Binding btn_gridLength}" />
                        <ColumnDefinition Width="0.2*" />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="1*"
                                MinWidth="10"
                                MaxWidth="35" />
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="3.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="3*" MaxHeight="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Viewbox
                            Grid.Row="1"
                            Grid.Column="1"
                            HorizontalAlignment="Left">
                            <ContentControl Content="{Binding mediaBar_mediaDurationTime}" Foreground="White" />
                        </Viewbox>
                    </Grid>

                    <Button
                        x:Name="Btn_Load"
                        Grid.Column="1"
                        Command="{Binding LoadCommand}"
                        FocusVisualStyle="{x:Null}"
                        Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Tag="../Resources/001-share.png"
                        MouseEnter="Btn_Load_MouseEnter"
                        MouseLeave="Btn_Load_MouseLeave"
                        Style="{StaticResource ButtonStyle}">                       
                    </Button>

                    <Button
                        x:Name="Btn_Stop"
                        Grid.Column="3"
                        Tag="../Resources/Stop-1.png"
                        Command="{Binding MediaStopCommand}"
                        FocusVisualStyle="{x:Null}"                        
                        Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Style="{DynamicResource ButtonStyle}">
                    </Button>

                    <Button
                        x:Name="Btn_Back"
                        Grid.Column="5"
                        Tag="../Resources/media_back_1.png"
                        Command="{Binding BackToCommand}"
                        FocusVisualStyle="{x:Null}"                        
                        Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Style="{DynamicResource ButtonStyle}">
                    </Button>

                    <Button
                        x:Name="Btn_paly_pause"
                        Grid.Column="7"
                        Tag="{Binding mediaBtn_play_pause}"
                        FocusVisualStyle="{x:Null}"                        
                        Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Command="{Binding mediaPlayPauseCommand}"
                        Style="{DynamicResource ButtonStyle}">
                    </Button>

                    <Button
                        x:Name="Btn_Jump"
                        Grid.Column="9"
                        Tag="../Resources/media_jump_1.png"
                        Command="{Binding JumpToCommand}"
                        FocusVisualStyle="{x:Null}"                        
                        Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Style="{DynamicResource ButtonStyle}">                        
                    </Button>

                    <Grid x:Name="rectangle_outer" Grid.Column="11" Height="{Binding ActualHeight, ElementName=Btn_Load, Mode=OneWay}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.8*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="0.8*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            x:Name="rectangle"
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="Transparent"
                            Opacity="1"
                            StrokeThickness="1" />
                        <Button
                            x:Name="Btn_volume"
                            Grid.Column="0"
                            Tag="{Binding mediaBar_volume_btn_sourcce}"
                            Command="{Binding MediaMuteCommand}"
                            FocusVisualStyle="{x:Null}"                        
                            
                            MouseDown="Btn_volume_MouseDown"
                            Style="{DynamicResource ButtonStyle}" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}">                            
                        </Button>
                        <Border Grid.Column="1">
                            <Slider
                                x:Name="Slider_volume"
                                Grid.Column="1"
                                Margin="2,0,2,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Focusable="False"
                                IsMoveToPointEnabled="True"
                                Maximum="100"
                                Minimum="0"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{DynamicResource Horizontal_Slider}"
                                ValueChanged="Slider_volume_ValueChanged"
                                Value="{Binding media_volume}">
                                <Slider.Resources>
                                    <Style x:Key="Horizontal_Slider" TargetType="{x:Type Slider}">
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="SnapsToDevicePixels" Value="true" />
                                        <Setter Property="OverridesDefaultStyle" Value="true" />
                                        <Style.Triggers>
                                            <Trigger Property="Orientation" Value="Horizontal">
                                                <Setter Property="MinHeight" Value="5" />
                                                <Setter Property="MinWidth" Value="60" />
                                                <Setter Property="Template" Value="{DynamicResource Slider}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                    <ControlTemplate x:Key="Slider" TargetType="{x:Type Slider}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                            </Grid.RowDefinitions>
                                            <Track x:Name="PART_Track" Grid.Row="2">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Style="{DynamicResource SliderRepeatButton1}" />
                                                    <!--<RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButton1}" />-->
                                                </Track.DecreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Style="{DynamicResource SliderThumb}" />
                                                </Track.Thumb>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Style="{DynamicResource SliderRepeatButton}" />
                                                </Track.IncreaseRepeatButton>
                                            </Track>
                                        </Grid>
                                    </ControlTemplate>
                                    <!--  SliderThumb  -->
                                    <Style x:Key="SliderThumb" TargetType="{x:Type Thumb}">
                                        <Setter Property="SnapsToDevicePixels" Value="true" />
                                        <Setter Property="OverridesDefaultStyle" Value="true" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Ellipse
                                                        Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                                        Height="{Binding sliderThumb_size}"
                                                        Fill="Transparent"
                                                        Stroke="Orange"
                                                        StrokeThickness="2" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <!--  Future Bar  -->
                                    <Style x:Key="SliderRepeatButton" TargetType="{x:Type RepeatButton}">
                                        <Setter Property="SnapsToDevicePixels" Value="true" />
                                        <Setter Property="OverridesDefaultStyle" Value="true" />
                                        <Setter Property="IsTabStop" Value="false" />
                                        <Setter Property="Focusable" Value="false" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <Border
                                                            Grid.Row="0"
                                                            Grid.RowSpan="3"
                                                            Background="Transparent" />
                                                        <Border
                                                            Grid.Row="1"
                                                            Height="3"
                                                            Background="DarkGray" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="SliderRepeatButton1" TargetType="{x:Type RepeatButton}">
                                        <Setter Property="SnapsToDevicePixels" Value="true" />
                                        <Setter Property="OverridesDefaultStyle" Value="true" />
                                        <Setter Property="IsTabStop" Value="false" />
                                        <Setter Property="Focusable" Value="false" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <Border
                                                            Grid.Row="0"
                                                            Grid.RowSpan="3"
                                                            Background="Transparent" />
                                                        <Border
                                                            Grid.Row="1"
                                                            Height="3"
                                                            Background="Orange"
                                                            SnapsToDevicePixels="True" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Slider.Resources>
                                <Slider.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Slider.RenderTransform>
                            </Slider>
                        </Border>
                        <Viewbox
                            Grid.Column="2"
                            MaxHeight="30"
                            Margin="2">
                            <TextBox Focusable="True"
                                x:Name="volume_txt"
                                Grid.Column="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                KeyDown="Volume_txtbox_KeyDown"
                                Style="{StaticResource style_txtbox}"
                                Text="{Binding media_volume}" />
                        </Viewbox>
                        <!--<Viewbox
                            Grid.Column="2"
                            MaxHeight="30"
                            Margin="2">
                            <TextBox
                                x:Name="volume_txtbox"
                                KeyDown="Volume_txtbox_KeyDown"      
                                
                                Visibility="Hidden" />
                        </Viewbox>-->
                    </Grid>

                    <Button
                        x:Name="Btn_fullscreen"
                        Grid.Column="13"
                        Command="{Binding MaximumCommand}"    
                        Tag="../Resources/full.png"
                        FocusVisualStyle="{x:Null}"                        
                        Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                        Style="{DynamicResource ButtonStyle}">
                    </Button>

                    <!--<Button
                        x:Name="Btn_fullscreen"
                        Grid.Column="9"
                        Command="{Binding MaximumCommand}"
                        Focusable="False"
                        Style="{StaticResource Btn_FullScreen_Style}" />-->
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Page>
