<Window
    x:Class="ImageTraveler.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cinchV2="clr-namespace:Cinch;assembly=Cinch.WPF"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gif="http://wpfanimatedgif.codeplex.com"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:ik="clr-namespace:Microsoft.Expression.Interactivity.Input;assembly=Microsoft.Expression.Interactions"
    xmlns:local="clr-namespace:ImageTraveler"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:ImageTraveler.ViewModels"
    Title="MainWindow"
    Width="1100"
    Height="650"
    MinWidth="950"
    MinHeight="550"
    AllowsTransparency="True"
    Background="Transparent"
    KeyboardNavigation.TabNavigation="None"
    MouseMove="Window_MouseMove"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="CenterScreen"
    WindowState="{Binding windowState}"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>
        <vm:Main_VM x:Key="main_vm" />
        <vm:Main_Command x:Key="main_cmd" />
        <Storyboard x:Key="TitleBar_StoryBoard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleBar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0" Value="-43" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleBar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="TitleBar_StoryBoard2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleBar" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-43">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseOut" Power="3" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Btn_pre_storybord_1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Btn_Previous" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Btn_pre_storybord_2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Btn_Previous" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Btn_next_storybord_1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Btn_Next" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Btn_next_storybord_2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Btn_Next" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Ellipse_start" x:Name="Ellipse_start">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="2" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="2" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse_image" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse_image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="1.2" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse_image" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="1.2" />
            </DoubleAnimationUsingKeyFrames>
            <PointAnimationUsingKeyFrames Storyboard.TargetName="ellipse_image" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                <EasingPointKeyFrame KeyTime="0" Value="0.5,0.5" />
                <EasingPointKeyFrame KeyTime="0:0:0.45" Value="0.5,0.5" />
            </PointAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ellipse_image" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.45" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="0:0:0.45" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="TitleBar_ControlGrid">
            <BeginStoryboard x:Name="TitleBar_StoryBoard_BeginStoryboard" Storyboard="{StaticResource TitleBar_StoryBoard}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="TitleBar_StoryBoard2_BeginStoryboard" Storyboard="{StaticResource TitleBar_StoryBoard2}" />
            <BeginStoryboard x:Name="Btn_pre_storybord_1_BeginStoryboard" Storyboard="{StaticResource Btn_pre_storybord_1}" />
            <BeginStoryboard x:Name="Btn_pre_storybord_2_BeginStoryboard" Storyboard="{StaticResource Btn_pre_storybord_2}" />
            <BeginStoryboard x:Name="Btn_next_storybord_1_BeginStoryboard" Storyboard="{StaticResource Btn_next_storybord_1}" />
            <BeginStoryboard x:Name="Btn_next_storybord_2_BeginStoryboard" Storyboard="{StaticResource Btn_next_storybord_2}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="TitleBar_ControlGrid">
            <BeginStoryboard x:Name="TitleBar_StoryBoard2_BeginStoryboard1" Storyboard="{StaticResource TitleBar_StoryBoard2}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="Btn_Previous">
            <BeginStoryboard x:Name="Btn_pre_storybord_1_BeginStoryboard1" Storyboard="{StaticResource Btn_pre_storybord_1}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="Btn_Next">
            <BeginStoryboard x:Name="Btn_pre_storybord_1_BeginStoryboard2" Storyboard="{StaticResource Btn_next_storybord_1}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="Btn_Next">
            <BeginStoryboard x:Name="Btn_next_storybord_2_BeginStoryboard1" Storyboard="{StaticResource Btn_next_storybord_2}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="Btn_Previous">
            <BeginStoryboard x:Name="Btn_pre_storybord_2_BeginStoryboard1" Storyboard="{StaticResource Btn_pre_storybord_2}" />
        </EventTrigger>
    </Window.Triggers>

    <Window.DataContext>
        <vm:Main_Command />
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseWheel">
            <cmd:EventToCommand Command="{Binding WindowMouseWheel}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseDown">
            <cmd:EventToCommand Command="{Binding WindowMouseDown}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <cmd:EventToCommand Command="{Binding WindowKey}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <ik:KeyTrigger Key="Escape">
            <i:InvokeCommandAction Command="{Binding EscKey}" />
        </ik:KeyTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="mainGrid" Background="Black">
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="Style_Resources/MainStyle.xaml" />
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="0.7*" MaxHeight="70" />
            <RowDefinition Height="6*" />
            <RowDefinition Height="1.3*" MaxHeight="140" />
        </Grid.RowDefinitions>



        <!--  TitleBar  -->
        <Grid
            x:Name="TitleBar_ControlGrid"
            Grid.Row="0"
            Panel.ZIndex="3"
            Background="Transparent">
            <Grid.Triggers>
                <!--  路由事件  -->
                <EventTrigger RoutedEvent="Grid.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                FillBehavior="HoldEnd"
                                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                To="Transparent"
                                Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:InvokeCommandAction Command="{Binding MouseMoveCommand}" />
                </i:EventTrigger>
                <!--<i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                </i:EventTrigger>-->
            </i:Interaction.Triggers>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <Border
                x:Name="TitleBar"
                Grid.Row="0"
                Panel.ZIndex="3"
                d:IsHidden="True"
                Background="#7a7a7a"
                Opacity="{Binding GroupOpacity[0]}"
                RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Border.RenderTransform>
                <Grid d:IsHidden="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                    <!--  TitleBar_Icon  -->
                    <Image
                        Grid.Column="0"
                        Margin="4,12,0,8"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        d:IsHidden="True"
                        Source="{Binding titleBar_ico_source}" />
                    <!--  TitleBar_TextBlock  -->
                    <TextBlock
                        x:Name="TextBlock_Title"
                        Grid.Column="1"
                        Margin="10,6,0,8"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        d:IsHidden="True"
                        FontFamily="Gen Jyuu Gothic"
                        FontSize="14"
                        Foreground="White"
                        Text="{Binding titleBar}" />
                    <!--  TitleBar_DragMove_Block  -->
                    <Grid
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        d:IsHidden="True"
                        Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding MouseLeftButtonUp}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseMove">
                                <cmd:EventToCommand Command="{Binding TitleBar_MouseMove}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <cmd:EventToCommand Command="{Binding TitleBar_MouseLeftButtonDown}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Grid>

                    <!--  TitleBar_Minimum_Btn  -->
                    <Button
                        Grid.Column="2"
                        Command="{Binding Grid_minimize_MouseDown}"
                        Style="{DynamicResource Btn_style_min}">
                        <Button.Resources>
                            <Style x:Key="Btn_style_min" TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Grid.Triggers>
                                                    <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="grid2">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    FillBehavior="HoldEnd"
                                                                    Storyboard.TargetName="rectangle"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    To="Transparent"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="grid2">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    FillBehavior="HoldEnd"
                                                                    Storyboard.TargetName="rectangle"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    To="LightGray"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Grid.Triggers>
                                                <Grid x:Name="grid2">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="0.7*" />
                                                        <RowDefinition />
                                                        <RowDefinition Height="0.7*" />
                                                    </Grid.RowDefinitions>
                                                    <Rectangle
                                                        x:Name="rectangle"
                                                        Grid.RowSpan="3"
                                                        Fill="Transparent" />
                                                    <Image
                                                        x:Name="ImageName"
                                                        Grid.Row="1"
                                                        Source="Resources/004-arrow-down-sign-to-navigate_1.png"
                                                        Stretch="Uniform" />
                                                </Grid>
                                                <ContentPresenter
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsFocused" Value="True" />
                                                <Trigger Property="IsDefaulted" Value="True" />
                                                <Trigger Property="IsMouseOver" Value="True" />
                                                <Trigger Property="IsPressed" Value="True" />
                                                <Trigger Property="IsEnabled" Value="False" />
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>

                    <!--  TitleBar_General/Maximum_Btn  -->
                    <Button
                        Grid.Column="3"
                        Command="{Binding Grid_generalize_maximum_MouseDown}"
                        Style="{DynamicResource Btn_style_gen}">
                        <Button.Resources>
                            <Style x:Key="Btn_style_gen" TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Grid.Triggers>
                                                    <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="grid2">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    FillBehavior="HoldEnd"
                                                                    Storyboard.TargetName="rectangle"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    To="Transparent"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="grid2">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    FillBehavior="HoldEnd"
                                                                    Storyboard.TargetName="rectangle"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    To="LightGray"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Grid.Triggers>
                                                <Grid x:Name="grid2">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="0.7*" />
                                                        <RowDefinition />
                                                        <RowDefinition Height="0.7*" />
                                                    </Grid.RowDefinitions>
                                                    <Rectangle
                                                        x:Name="rectangle"
                                                        Grid.RowSpan="3"
                                                        Fill="Transparent" />
                                                    <Image
                                                        x:Name="ImageName"
                                                        Grid.Row="1"
                                                        Source="Resources/001-browser_1.png"
                                                        Stretch="Uniform" />
                                                </Grid>
                                                <ContentPresenter
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsFocused" Value="True" />
                                                <Trigger Property="IsDefaulted" Value="True" />
                                                <Trigger Property="IsMouseOver" Value="True" />
                                                <Trigger Property="IsPressed" Value="True" />
                                                <Trigger Property="IsEnabled" Value="False" />
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>

                    <!--  TitleBar_Close_Btn  -->
                    <Button
                        Grid.Column="4"
                        Command="{Binding Grid_close_MouseDown}"
                        Style="{DynamicResource Btn_style_gen}">
                        <Button.Resources>
                            <Style x:Key="Btn_style_gen" TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Grid.Triggers>
                                                    <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="grid2">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    FillBehavior="HoldEnd"
                                                                    Storyboard.TargetName="rectangle"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    To="Transparent"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="grid2">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    FillBehavior="HoldEnd"
                                                                    Storyboard.TargetName="rectangle"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    To="LightGray"
                                                                    Duration="0:0:0.3" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Grid.Triggers>
                                                <Grid x:Name="grid2">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="0.7*" />
                                                        <RowDefinition />
                                                        <RowDefinition Height="0.7*" />
                                                    </Grid.RowDefinitions>
                                                    <Rectangle
                                                        x:Name="rectangle"
                                                        Grid.RowSpan="3"
                                                        Fill="Transparent" />
                                                    <Image
                                                        x:Name="ImageName"
                                                        Grid.Row="1"
                                                        Source="Resources/cancel-music_1.png"
                                                        Stretch="Uniform" />
                                                </Grid>
                                                <ContentPresenter
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsFocused" Value="True" />
                                                <Trigger Property="IsDefaulted" Value="True" />
                                                <Trigger Property="IsMouseOver" Value="True" />
                                                <Trigger Property="IsPressed" Value="True" />
                                                <Trigger Property="IsEnabled" Value="False" />
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>

                </Grid>
            </Border>
        </Grid>

        <!--  MainPictureBox  -->
        <Grid
            x:Name="Grid_PicBoxView"
            Grid.Row="0"
            Grid.RowSpan="3"
            Panel.ZIndex="1"
            d:IsHidden="True"
            Focusable="False"
            MouseMove="PicBoxView_MouseMove"
            PreviewMouseLeftButtonDown="PicBoxView_PreviewMouseLeftButtonDown"
            PreviewMouseLeftButtonUp="PicBoxView_PreviewMouseLeftButtonUp">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="Btn_Pointer" Header="Pointer" />
                    <MenuItem x:Name="Btn_Pen" Header="Pen" />
                    <MenuItem Header="Drag" />
                    <Separator />
                    <MenuItem Header="Setting" />
                </ContextMenu>
            </Grid.ContextMenu>

            <Border x:Name="PicBorder">
                <Border.RenderTransform>
                    <TranslateTransform X="{Binding picX}" Y="{Binding picY}" />
                </Border.RenderTransform>
                <Viewbox x:Name="ViewBox_Image" RenderTransformOrigin="0.5,0.5">
                    <Viewbox.LayoutTransform>
                        <RotateTransform Angle="{Binding rotaAngle}" />
                    </Viewbox.LayoutTransform>
                    <Image
                        x:Name="PicBoxView"
                        gif:ImageBehavior.AnimatedSource="{Binding picSource}"
                        gif:ImageBehavior.AutoStart="True"
                        gif:ImageBehavior.RepeatBehavior="{Binding RepeatBehavior}"
                        RenderTransformOrigin="0.5,0.5"
                        SnapsToDevicePixels="True">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="{Binding scaleXY}" ScaleY="{Binding scaleXY}" />
                                <SkewTransform />
                                <RotateTransform />
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                </Viewbox>
            </Border>
        </Grid>

        <!--  InitialBoard  -->
        <Border
            x:Name="Initial_Border"
            Grid.Row="1"
            Grid.RowSpan="4"
            Panel.ZIndex="{Binding zIndex_group[0]}"
            d:IsHidden="True"
            Background="Black"
            MouseMove="PicBoxView_MouseMove"
            PreviewMouseLeftButtonDown="PicBoxView_PreviewMouseLeftButtonDown">
            <Viewbox
                d:IsHidden="True"
                MouseMove="PicBoxView_MouseMove"
                PreviewMouseLeftButtonDown="PicBoxView_PreviewMouseLeftButtonDown"
                PreviewMouseLeftButtonUp="PicBoxView_PreviewMouseLeftButtonUp"
                RenderTransformOrigin="0.5,0.5" />
        </Border>

        <!--  Main_View  -->
        <Grid
            Grid.Row="0"
            Grid.RowSpan="5"
            Panel.ZIndex="1"
            d:IsHidden="True"
            MouseLeftButtonDown="Grid_MouseLeftButtonDown"
            MouseLeftButtonUp="Grid_MouseLeftButtonUp">
            <Viewbox>
                <Frame x:Name="Frame_main" NavigationUIVisibility="Hidden" />
            </Viewbox>
        </Grid>



        <!--  next pic button  -->
        <Grid
            x:Name="grid"
            Grid.Row="0"
            Grid.RowSpan="3"
            Panel.ZIndex="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="30" />
                <ColumnDefinition Width="15.5*" />
                <ColumnDefinition MinWidth="30" />
            </Grid.ColumnDefinitions>
            <Button
                x:Name="Btn_Previous"
                Grid.Column="0"
                Command="{Binding PreCommand}"
                Focusable="False"
                Opacity="0"
                Style="{DynamicResource ButtonStyle1}">
                <Button.Resources>
                    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Grid x:Name="grid2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.2*" />
                                                <RowDefinition />
                                                <RowDefinition Height="0.2*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Rectangle
                                                x:Name="rectangle"
                                                Grid.RowSpan="3"
                                                Grid.ColumnSpan="3"
                                                Fill="Black">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                        <GradientStop Offset="0" Color="Black" />
                                                        <GradientStop Offset="1" Color="Transparent" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Image
                                                x:Name="ImageName"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Margin="0"
                                                Source="Resources/Image_Previous_1.png"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsFocused" Value="True" />
                                        <Trigger Property="IsDefaulted" Value="True" />
                                        <Trigger Property="IsMouseOver" Value="True" />
                                        <Trigger Property="IsPressed" Value="True" />
                                        <Trigger Property="IsEnabled" Value="False" />
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
            </Button>
            <Button
                x:Name="Btn_Next"
                Grid.Column="2"
                Command="{Binding NextCommand}"
                Focusable="False"
                Opacity="0"
                Style="{DynamicResource ButtonStyle1}">
                <Button.Resources>
                    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Grid x:Name="grid2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.2*" />
                                                <RowDefinition />
                                                <RowDefinition Height="0.2*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Rectangle
                                                x:Name="rectangle"
                                                Grid.RowSpan="3"
                                                Grid.ColumnSpan="3"
                                                Fill="Black">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush StartPoint="1,0.5" EndPoint="0,0.5">
                                                        <GradientStop Color="Black" />
                                                        <GradientStop Offset="1" Color="Transparent" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Image
                                                x:Name="ImageName"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Margin="0"
                                                Source="Resources/Image_Next_1.png"
                                                Stretch="Uniform" />
                                        </Grid>
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsFocused" Value="True" />
                                        <Trigger Property="IsDefaulted" Value="True" />
                                        <Trigger Property="IsMouseOver" Value="True" />
                                        <Trigger Property="IsPressed" Value="True" />
                                        <Trigger Property="IsEnabled" Value="False" />
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
            </Button>
            <Ellipse
                x:Name="ellipse"
                Grid.Column="1"
                Width="60"
                Height="60"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Fill="#FFA4A4A4"
                Opacity="0"
                RenderTransformOrigin="0.5,0.5"
                Visibility="Collapsed">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Image
                x:Name="ellipse_image"
                Grid.Column="1"
                Width="60"
                Height="60"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Opacity="0"
                RenderTransformOrigin="0.5,0.5"
                Source="Resources/下_1.png"
                Visibility="Collapsed">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform X="2" />
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
        </Grid>

        <!--  Btn_Group_View  -->
        <Grid
            Grid.Row="2"
            Panel.ZIndex="3"
            d:IsHidden="True"
            Focusable="False">
            <Frame
                x:Name="Frame_bar"
                d:IsHidden="True"
                NavigationUIVisibility="Hidden" />
        </Grid>

        <!--  Window borderbrush  -->
        <Border
            Grid.RowSpan="3"
            Panel.ZIndex="5"
            d:IsLocked="True"
            BorderBrush="Orange"
            BorderThickness="0.5"
            Opacity="{Binding GroupOpacity[0]}" />
    </Grid>
</Window>
